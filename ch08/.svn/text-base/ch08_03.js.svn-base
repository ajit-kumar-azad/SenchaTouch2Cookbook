Ext.setup({
    onReady: function() {
    
 	Ext.regModel('Flower', {
	    fields: [
	    	'id','album','url','title', 'about'
	    ],
	    proxy: {
        type: 'ajax',
        url : 'flowers.json',
        reader: {
            type: 'json',
            root: 'flowers',
            totalProperty: 'totalRecords',
            successProperty: 'success'
        },
        timeout: 2000,
		listeners: {
		    exception:function (proxy, response, operation) {
		        var dv = Ext.getCmp('dataview-id');
	    		dv.bindStore(offlineStore);
		        offlineStore.load();
		    }
		}
    	},
    	setUrl: function() {
            var script = document.createElement("script");
            script.setAttribute("src",
                "http://src.sencha.io/data.setPhotoUrl-" + this.getId() +
                "/" + this.get('url')
            );
            script.setAttribute("type","text/javascript");
            document.body.appendChild(script);
        }
	});
	
	setPhotoUrl = function (id, dataUrl) {
        var flower = this.offlineStore.getById(id);
        flower.set('url', dataUrl);
        offlineStore.sync();
    };
	
	onlineStore = new Ext.data.Store({
	    model: 'Flower'
	});
	
	onlineStore.addListener('load', function (store, records) {
	    offlineStore.proxy.clear();
        this.each(function (record) {
            var flower = offlineStore.add(record.data)[0];
            flower.setUrl();
        });
	    offlineStore.sync();
	    var dv = Ext.getCmp('dataview-id');
	    dv.bindStore(offlineStore);
	});
	
	offlineStore = new Ext.data.Store({
	    model: 'Flower',
	    proxy: {
	        type: 'localstorage',
	        id: 'yapps-02'
	    }	    
	});
				
	var tpl = new Ext.XTemplate(
	    '<tpl for=".">',
	        '<div class="thumb-wrap" id="{title}">',
	        '<div class="thumb"><img src="{url}" title="{title}"></div>',
	        '<span>{about}</span></div>',
	    '</tpl>',
	    '<div class="x-clear"></div>'
	);
	
	
	var filter = function(criteria) {
	var dv = Ext.getCmp('dataview-id');
	var store = dv.getStore();
	return store.filterBy(function(record, id){
	                            		if (record.get('album') === criteria || Ext.isEmpty(criteria))
	                            			return true;
	                            		else
	                            			return false;
	                            	});
	}

		
	var pnl = new Ext.Panel({
		id:'images-view',
	    fullscreen: true,
	    scroll: false,
    	monitorOrientation: true,
    	layout: 'card',
	    defaults: {
	        border: false
	    },
	    items: [new Ext.DataView({
		        id: 'dataview-id',
		        store: onlineStore,
		        scroll: 'vertical',
		        tpl: tpl,
		        autoHeight:true,
		        singleSelect: true,
		        overItemCls:'x-view-over',
		        itemSelector:'div.thumb-wrap',
		        emptyText: 'No images to display',
		        monitorOrientation: true,
		        listeners: {
		        	selectionchange: function(model, recs) {
		        		if (recs.length > 0) {
		        			Ext.getCmp('detail-panel').update('<img src="' + recs[0].data.url + '" title="' + recs[0].data.title + '">');
		        			Ext.getCmp('images-view').getLayout().setActiveItem(1);
		        			Ext.getCmp('back-button').show();
		        			Ext.getCmp('rose-button').hide();
		        			Ext.getCmp('daffodil-button').hide();
		        			Ext.getCmp('hibiscus-button').hide();
			            }
		        	},
		        	orientationchange: function(pnl, orientation, width, height){
		        		pnl.refresh();
		        	}
		        }
		    }), new Ext.Panel({
								id: 'detail-panel',
					            width: 400,
					            height: 300,
					            styleHtmlContent: true,
					            scroll: 'vertical',
					            cls: 'htmlcontent'
					        })],
	    dockedItems: [
	            {
	                xtype: 'toolbar',
	                dock: 'top',
	                items: [
	                    {
	                        text: 'Rose',
	                        id: 'rose-button',
	                        handler: function() {
	                            filter('rose');
	                        }
	                    },
	                    {
	                        text: 'Daffodil',
	                        id: 'daffodil-button',
	                        handler: function() {
	                        	filter('daffodil');
	                        }
	                    },{
	                        text: 'Hibiscus',
	                        id: 'hibiscus-button',
	                        handler: function() {
	                            filter('hibiscus');
	                        }
	                    },{
	                        text: 'Reset',
	                        id: 'reset-button',
	                        ui: 'decline-round',
	                        handler: function() {
	                        	Ext.getCmp('images-view').getLayout().setActiveItem(0);
	                            filter('');
	                        }
	                    }, {
	                        text: 'Back',
	                        id: 'back-button',
	                        ui: 'back',
	                        hidden: true,
	                        handler: function() {
	                            Ext.getCmp('images-view').getLayout().setActiveItem(0);
	                            this.hide();
	                            Ext.getCmp('rose-button').show();
		        				Ext.getCmp('daffodil-button').show();
		        				Ext.getCmp('hibiscus-button').show();
	                        }
	                    }
	                ]
	            }
	      ]
	});
	
	onlineStore.load();
	
	}							
});